/** * ObjectTreeNode.java * @author Aditi Datta */public class ObjectTreeNode implements ObjectTreeNodeInterface {    private Object info;    private ObjectTreeNode left;    private ObjectTreeNode right;    /**     * creates a TreeNode with default values     */    public ObjectTreeNode() {        info = null;        left = null;        right = null;    }    /**     * Creates a tree node with a object in the data field     * @param o Object - Base class must implement TreeComparable     */    public ObjectTreeNode (Object o) {        info = o;        left = null;        right = null;    }    /**     * Sets the info field to the given object     * @param o Object - Base class must implement TreeComparable     */    public void setInfo(Object o) {        info = o;    }    /**     * Return the info field     * @return Object     */    public Object getInfo() {        return info;    }    /**     * Sets left pointer to the given node     * @param p ObjectTreeNodeInterface     */    public void setLeft(ObjectTreeNodeInterface p) {        left = (ObjectTreeNode) p;    }    /**     * Returns the Tree Node pointed ny the current node's left pointer     * @return ObjectTreeNode     */    public ObjectTreeNode getLeft() {        return left;    }    /**     * Sets right pointer to the given node     * @param p ObjectTreeNodeInterface     */    public void setRight(ObjectTreeNodeInterface p) {        right = (ObjectTreeNode) p;    }    /**     * Returns the Tree Node pointed ny the current node's right pointer     * @return ObjectTreeNode     */    public ObjectTreeNode getRight() {        return right;    }}